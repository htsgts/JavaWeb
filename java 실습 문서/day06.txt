Day6

1. 객체 지향 언어의 특징
(1) 상속(Inheritance)
    하위 클래스가 상위 클래스를 물려 받는 것
(2) 다형성(Polymorphism)
    cf) C : Func1(int), func2(float), func3(char)
    같은 이름으로 호출하나
    호출 시 전달한 인자의 타입에 따라 다르게 설계 가능
(3) 추상화(Abstraction)
    사물(객체)의 속성이나 특성을 추출하는 것
(4) 캡슐화(Encapsulation)
    내부를 공개하지 않는 것(예 - 리모콘)
    불필요하게 복잡한 것을 피하고 위험에서 보호

2. 클래스의 구조
(1) 필드(Field)
    클래스가 보유한 변수
    클래스 함수 내에서 생성한 변수는 아님
    맴버 변수

(2) 메서드(Method)
    함수인데, 클래스 소속의 함수
    맴버 함수(member function)

(3) 생성자(Constructor)
    클래스가 객체(제품)으로 만들어질 때 반드시 실행되는 메서드
    클래스가 만들어질 때 반드시 해야될 일
    ex) 필드 초기 세팅, 데이터베이스 접속, 객체 수 카운트

* 클래스 탄생의 역사
    변수 : 하나의 값만 저장
    배열 : 여러 개의 값을 저장
    구조체(struct) : 여러 종류의 값을 저장
                    typedef {
                        int age;
                        char* name;
                    }man;
                    man man1; man man2;
                    man1.age = 18;
                    man1.name = "Donald";
    클래스 : 여러 종류의 값 뿐만 아니라 여러 형태의 행동(메서드) 보유
                    class Man{
                        int age;
                        String name;
                        void introduce(){
                            제 이름은 name구요, 나이는 age입니다.
                        }
                    }
